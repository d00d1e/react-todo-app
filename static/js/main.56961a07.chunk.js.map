{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","uuidv4","text","type","placeholder","name","onChange","ref","Todo","todos","editTodo","completeTodo","deleteTodo","setEdit","map","todo","isComplete","onClick","LOCAL_STORAGE_KEY","TodoList","setTodos","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","test","newTodos","newValue","prev","item","updatedTodos","removedTodo","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56961a07.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  // input focus\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: uuidv4(),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            className=\"todo-input edit\"\n            placeholder=\"Update your todo\"\n            value={input}\n            name=\"text\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button type=\"submit\" className=\"todo-button edit\">\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"text\"\n            className=\"todo-input\"\n            placeholder=\"Add a todo\"\n            value={input}\n            name=\"text\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button type=\"submit\" className=\"todo-button\">\n            Add Todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nexport default function Todo({ todos, editTodo, completeTodo, deleteTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitEdit = (value) => {\n    editTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"hello\",\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitEdit} />;\n  }\n\n  return todos.map((todo) => (\n    <div\n      key={todo.id}\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n    >\n      <div onClick={() => completeTodo(todo.id)}>{todo.text}</div>\n      <div className=\"icons\">\n        <TiEdit\n          className=\"edit-icon\"\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n        />\n        <RiCloseCircleLine\n          className=\"delete-icon\"\n          onClick={() => deleteTodo(todo.id)}\n        />\n      </div>\n    </div>\n  ));\n}\n","import React, { useEffect, useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nconst LOCAL_STORAGE_KEY = \"todoApp.todos\";\n\nexport default function TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  //retrieve from localStorage\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n\n  //store to localStorage\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  //add todo\n  const addTodo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [...todos, todo];\n    setTodos(newTodos);\n  };\n\n  //edit todo\n  const editTodo = (id, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos((prev) => prev.map((item) => (item.id === id ? newValue : item)));\n  };\n\n  //complete todo\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  //delete todo\n  const deleteTodo = (id) => {\n    const removedTodo = [...todos].filter((todo) => todo.id !== id);\n    setTodos(removedTodo);\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        editTodo={editTodo}\n        completeTodo={completeTodo}\n        deleteTodo={deleteTodo}\n      />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}